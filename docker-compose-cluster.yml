version: '3'

networks:
  app-tier:
    driver: bridge

services:
  zookeeper:
    ports:
      - '50000:2181'
    image: bitnami/zookeeper:latest
    networks:
      - app-tier
    environment:
      #Not for production
      ALLOW_ANONYMOUS_LOGIN: yes

      #Example settings for roduction
    # - ZOO_ENABLE_AUTH=yes
    # - ZOO_SERVER_USERS=kafka
    # - ZOO_SERVER_PASSWORDS=kafka_password

  kafka-0:
    ports:
      - '50001:9092'
      - '50002:9093'
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_CFG_BROKER_ID: 0
      KAFKA_LISTENERS: 'INTERNAL://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'INTERNAL:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_ADVERTISED_HOST_NAME: host.docker.internal # change to 172.17.0.1 if running on Ubuntu
      #Not for production
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_CREATE_TOPICS: 'example-topic:1:1'
      ALLOW_PLAINTEXT_LISTENER: yes

      #Basic security options for production - update per your settings - for sake of readability only commenting in kafka-0, but will have to be done for all instances...
      #KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP:INTERNAL:SSL,CLIENT:SASL_SSL
      #KAFKA_CFG_LISTENERS=INTERNAL://:9093,CLIENT://:9092
      #KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9093,CLIENT://kafka:9092
      #KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      #KAFKA_CLIENT_USERS=user
      #KAFKA_CLIENT_PASSWORDS=password
      #KAFKA_ZOOKEEPER_PROTOCOL: SASL.
      #KAFKA_ZOOKEEPER_USER: Apache Kafka Zookeeper user for SASL authentication. No defaults.
      #KAFKA_ZOOKEEPER_PASSWORD: Apache Kafka Zookeeper user password for SASL authentication. No defaults.
      
    image: bitnami/kafka:latest
    #Update for production
    hostname: localhost
    networks:
      - app-tier
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      #Persistent storage - make sure appropriate permissions are set
      - '/var/run/kafka/0/:/opt/kafka/0/'

      #External properties file based configuration
      #- /path/to/server.properties:/bitnami/kafka/config/server.properties

  kafka-1:
    ports:
      - '50003:9092'
      - '50004:9093'
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_CFG_BROKER_ID: 1
      KAFKA_LISTENERS: 'INTERNAL://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'INTERNAL:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_ADVERTISED_HOST_NAME: host.docker.internal # change to 172.17.0.1 if running on Ubuntu
      #Not for production
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_CREATE_TOPICS: 'example-topic:1:1'
      ALLOW_PLAINTEXT_LISTENER: yes
    image: bitnami/kafka:latest
    #Update for production
    hostname: localhost
    networks:
      - app-tier
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - '/var/run/kafka/1/:/opt/kafka/1/'
    
  kafka-2:
    ports:
      - '50005:9092'
      - '50006:9093'
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_CFG_BROKER_ID: 2
      KAFKA_LISTENERS: 'INTERNAL://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'INTERNAL:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_ADVERTISED_HOST_NAME: host.docker.internal # change to 172.17.0.1 if running on Ubuntu
      #Not for production
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_CREATE_TOPICS: 'example-topic:1:1'
      ALLOW_PLAINTEXT_LISTENER: yes
    image: bitnami/kafka:latest

    #Update for production
    hostname: localhost
    networks:
      - app-tier  
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - '/var/run/kafka/2/:/opt/kafka/2/'

  producer:
    depends_on:
      - kafka-0
      - kafka-1
      - kafka-2
    environment:
      #Kafka
      TOPIC: example-topic
      ENVIRONMENT: local
      INTERNAL_KAFKA_ADDR: 'kafka:9092'
    build:
      context: ./Producer

  consumer:
    depends_on:
      - kafka-0
      - kafka-1
      - kafka-2
    environment:
      TOPIC: example-topic
      ENVIRONMENT: local
      INTERNAL_KAFKA_ADDR: 'kafka:9092'
    build:
      context: ./Consumer
volumes: {}